<tool id="limma_voom" name="limma" version="3.50.1+galaxy0">
    <description>
        Perform differential expression with limma-voom or limma-trend
    </description>
    <macros/>
    <xrefs>
        <xref type="bio.tools">
            limma
        </xref>
    </xrefs>
    <edam_topics>
        <edam_topic>
            topic_3308
        </edam_topic>
    </edam_topics>
    <edam_operations>
        <edam_operation>
            operation_3563
        </edam_operation>
        <edam_operation>
            operation_3223
        </edam_operation>
    </edam_operations>
    <requirements>
        <requirement type="package" version="3.50.1">
            bioconductor-limma
        </requirement>
        <requirement type="package" version="3.36.0">
            bioconductor-edger
        </requirement>
        <requirement type="package" version="1.4.36">
            r-statmod
        </requirement>
        <requirement type="package" version="1.1.1">
            r-scales
        </requirement>
        <requirement type="package" version="0.2.21">
            r-rjson
        </requirement>
        <requirement type="package" version="1.20.3">
            r-getopt
        </requirement>
        <requirement type="package" version="3.1.1">
            r-gplots
        </requirement>
        <requirement type="package" version="2.4.0">
            bioconductor-glimma
        </requirement>
    </requirements>
    <version_command>
        echo $(R --version | grep version | grep -v GNU)", limma version" $(R --vanilla --slave -e "library(limma); cat(sessionInfo()\$otherPkgs\$limma\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")", edgeR version" $(R --vanilla --slave -e "library(edgeR); cat(sessionInfo()\$otherPkgs\$edgeR\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")", statmod version" $(R --vanilla --slave -e "library(statmod); cat(sessionInfo()\$otherPkgs\$statmod\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")", scales version" $(R --vanilla --slave -e "library(scales); cat(sessionInfo()\$otherPkgs\$scales\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")", rjson version" $(R --vanilla --slave -e "library(rjson); cat(sessionInfo()\$otherPkgs\$rjson\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")", getopt version" $(R --vanilla --slave -e "library(getopt); cat(sessionInfo()\$otherPkgs\$getopt\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")", gplots version" $(R --vanilla --slave -e "library(gplots); cat(sessionInfo()\$otherPkgs\$gplots\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")", Glimma version" $(R --vanilla --slave -e "library(Glimma); cat(sessionInfo()\$otherPkgs\$Glimma\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")
    </version_command>
    <command detect_errors="exit_code">
        #import json
Rscript '$__tool_directory__/limma_voom.R'

-R '$outReport'
-o '$outReport.files_path'

#if $input.format=="files":

    ## Adapted from DESeq2 wrapper
    #set $temp_factor_names = list()
    #for $fact in $input.rep_factor:
        #set $temp_factor = list()
        #for $g in $fact.rep_group:
            #set $count_files = list()
            #for $file in $g.countsFile:
                $count_files.append(str($file))
            #end for
            $temp_factor.append( {str($g.groupName): $count_files} )
        #end for

        $temp_factor.reverse()
        $temp_factor_names.append([str($fact.factorName), $temp_factor])
    #end for
    -j '#echo json.dumps(temp_factor_names)#'

#elif $input.format=="matrix":
    -m '$input.counts'
    #if $input.fact.ffile=='yes':
        -f '$input.fact.finfo'
    #else:
        -i '${ '|'.join( ['%s::%s' % ($x.factorName, $x.groupNames) for x in $input.fact.rep_factor] ) }'
    #end if
#end if

#if $anno.annoOpt=='yes':
    -a '$anno.geneanno'
#end if

#if $cont.cfile=='yes':
    -C '$cont.cinfo'
#else:
    -D '${ ','.join( ['%s' % $x.contrast for x in $cont.rep_contrast] ) }'
#end if

#if $f.filt.filt_select == 'yes':
    #if $f.filt.cformat.format_select == 'cpm':
        -c '$f.filt.cformat.cpmReq'
        -s '$f.filt.cformat.cpmSampleReq'
    #elif $f.filt.cformat.format_select == 'counts':
            -z '$f.filt.cformat.cntReq'
        #if $f.filt.cformat.samples.count_select == 'total':
            -y
        #elif $f.filt.cformat.samples.count_select == 'sample':
            -s '$f.filt.cformat.samples.cntSampleReq'
        #end if
    #end if
#end if

#if $out.plots:
    -P $out.plots
#end if

#if $out.filtCounts:
    -F
#end if

#if $out.normCounts:
    -x
#end if

#if $out.libinfo:
    -L
#end if

#if $out.rdaOption:
    -r
#end if


-l '$adv.lfc'
-p '$adv.pVal'
-d '$adv.pAdjust'
-G '$adv.topgenes'
#if $adv.treat:
    -T
#end if

#if $deMethod.de_select == 'voom':
    #if $deMethod.weightOption:
        -w
    #end if
#elif $deMethod.de_select == 'trend':
    -t $deMethod.prior_count
#end if

-n '$adv.normalisationOption'

#if $adv.robOption:
    -b
#end if

&amp;&amp;
mkdir ./output_dir

&amp;&amp;
cp '$outReport.files_path'/*tsv output_dir/

#if 'i' in str($out.plots).split( "," ):
    &amp;&amp; cp -r ./glimma* '$outReport.files_path'
#end if

#if $out.filtCounts or $out.normCounts:
    &amp;&amp; cp '$outReport.files_path'/*counts output_dir/
#end if

#if $out.rscript:
    &amp;&amp; cp '$__tool_directory__/limma_voom.R' '$rscript'
#end if
    </command>
    <inputs>
        <conditional name="deMethod">
            <param name="de_select" type="select" label="Differential Expression Method" help="Select the limma-voom or limma-trend method. See Help section below for more information. Default: limma-voom">
                <option value="voom" selected="True">
                    limma-voom
                </option>
                <option value="trend">
                    limma-trend
                </option>
            </param>
            <when value="voom">
                <param name="weightOption" type="boolean" truevalue="1" falsevalue="0" checked="false" label="Apply voom with sample quality weights?" help="Apply weights if outliers are present (voomWithQualityWeights). Default: False.">
                </param>
            </when>
            <when value="trend">
                <param name="prior_count" type="float" min="0" value="3" label="Prior count" help="Average count to be added to each observation to avoid taking log of zero. Default: 3."/>
            </when>
        </conditional>
        <conditional name="input">
            <param name="format" type="select" label="Count Files or Matrix?" help="You can choose to input either separate count files (one per sample) or a single count matrix">
                <option value="files">
                    Separate Count Files
                </option>
                <option value="matrix">
                    Single Count Matrix
                </option>
            </param>
            <when value="files">
                <repeat name="rep_factor" title="Factor" min="1">
                    <param name="factorName" type="text" label="Name" help="Name of experiment factor of interest (e.g. Genotype). One factor must be entered and there must be two or more groups per factor. Optional additional factors (e.g. Batch) can be entered using the Insert Factor button below, see Help section for more information. NOTE: Please only use letters, numbers or underscores.">
                        <sanitizer>
                            <valid initial="string.letters,string.digits">
                                <add value="_"/>
                            </valid>
                        </sanitizer>
                    </param>
                    <repeat name="rep_group" title="Group" min="2" default="2">
                        <param name="groupName" type="text" label="Name" help="Name of group that the counts files belong to (e.g. WT or Mut). NOTE: Please only use letters, numbers or underscores (case sensitive).">
                            <sanitizer>
                                <valid initial="string.letters,string.digits">
                                    <add value="_"/>
                                </valid>
                            </sanitizer>
                        </param>
                        <param name="countsFile" type="data" format="tabular" multiple="true" label="Counts files"/>
                    </repeat>
                </repeat>
            </when>
            <when value="matrix">
                <param name="counts" type="data" format="tabular" label="Count Matrix"/>
                <conditional name="fact">
                    <param name="ffile" type="select" label="Input factor information from file?" help="You can choose to input the factor and group information for the samples from a file or manually enter below. NOTE: Please only use letters, numbers or underscores (case sensitive), the group names MUST not contain hyphens.">
                        <option value="no">
                            No
                        </option>
                        <option value="yes">
                            Yes
                        </option>
                    </param>
                    <when value="yes">
                        <param name="finfo" type="data" format="tabular" label="Factor File"/>
                    </when>
                    <when value="no">
                        <repeat name="rep_factor" title="Factor" min="1">
                            <param name="factorName" type="text" label="Factor Name" help="Name of experiment factor of interest (e.g. Genotype). One factor must be entered and there must be two or more groups per factor. Additional factors (e.g. Batch) can be entered using the Insert Factor button below, see Help section below. NOTE: Please only use letters, numbers or underscores.">
                                <validator type="empty_field"/>
                                <validator type="regex" message="Please only use letters, numbers or underscores">
                                    ^[\w]+$
                                </validator>
                            </param>
                            <param name="groupNames" type="text" label="Groups" help="Enter the group names for the samples separated with commas e.g. WT,WT,WT,Mut,Mut,Mut. The order of the names must match the order of the samples in the columns of the count matrix. NOTE: Please only use letters, numbers or underscores (case sensitive), the group names MUST not contain hyphens.">
                                <validator type="empty_field"/>
                                <validator type="regex" message="Please only use letters, numbers or underscores, and separate levels by commas">
                                    ^[\w,]+$
                                </validator>
                            </param>
                        </repeat>
                    </when>
                </conditional>
            </when>
        </conditional>
        <conditional name="anno">
            <param name="annoOpt" type="select" label="Use Gene Annotations?" help="If you provide an annotation file, annotations will be added to the table(s) of differential expression results to provide descriptions for each gene, and used to label the top genes in the Volcano plot. Interactive Glimma Volcano and MD plots will also be generated. See Help section below.">
                <option value="no">
                    No
                </option>
                <option value="yes">
                    Yes
                </option>
            </param>
            <when value="yes">
                <param name="geneanno" type="data" format="tabular" label="Gene Annotations"/>
            </when>
            <when value="no"/>
        </conditional>
        <conditional name="cont">
            <param name="cfile" type="select" label="Input Contrast information from file?" help="You can choose to input the contrast information for the samples from a file or manually enter below. NOTE: Please only use letters, numbers or underscores (case sensitive), the group names MUST not contain hyphens. Use a hyphen to separate the groups you want to compare, as shown in the Help section below.">
                <option value="no">
                    No
                </option>
                <option value="yes">
                    Yes
                </option>
            </param>
            <when value="yes">
                <param name="cinfo" type="data" format="tabular" label="Contrasts File"/>
            </when>
            <when value="no">
                <repeat name="rep_contrast" title="Contrast" min="1" default="1">
                    <param name="contrast" type="text" label="Contrast of Interest" help="Names of two groups to compare separated by a hyphen e.g. Mut-WT. If the order is Mut-WT the fold changes in the results will be up/down in Mut relative to WT. If you have more than one contrast enter each separately using the Insert Contrast button below. For differences between contrasts use e.g. (Mut1-Ctrl1)-(Mut2-Ctrl2). For more info, see Chapter 8 in the limma User's guide: https://www.bioconductor.org/packages/release/bioc/vignettes/limma/inst/doc/usersguide.pdf">
                        <validator type="empty_field"/>
                        <validator type="regex" message="Please only use letters, numbers or underscores">
                            ^[\(\w\)-]+$
                        </validator>
                    </param>
                </repeat>
            </when>
        </conditional>
        <section name="f" expanded="false" title="Filter Low Counts">
            <conditional name="filt">
                <param name="filt_select" type="select" label="Filter lowly expressed genes?" help="Treat genes with very low expression as unexpressed and filter out. See the Filter Low Counts section below for more information. Default: No">
                    <option value="no" selected="true">
                        No
                    </option>
                    <option value="yes">
                        Yes
                    </option>
                </param>
                <when value="yes">
                    <conditional name="cformat">
                        <param name="format_select" type="select" label="Filter on CPM or Count values?" help="It is slightly better to base the filtering on count-per-million (CPM) rather than the raw count values so as to avoid favoring genes expressed in samples sequenced to a higher depth. ">
                            <option value="cpm">
                                CPM
                            </option>
                            <option value="counts">
                                Counts
                            </option>
                        </param>
                        <when value="cpm">
                            <param name="cpmReq" type="float" value="1" min="0" label="Minimum CPM" help="Treat genes with CPM below this value as unexpressed and filter out. See the Filter Low Counts section below for more information."/>
                            <param name="cpmSampleReq" type="integer" value="0" min="0" label="Minimum Samples" help="Filter out all genes that do not meet the Minimum CPM in at least this many samples. See the Filter Low Counts section below for more information."/>
                        </when>
                        <when value="counts">
                            <param name="cntReq" type="integer" value="0" min="0" label="Minimum Count" help="Filter out all genes that do not meet this minimum count. You can choose below to apply this filter to the total count for all samples or specify the number of samples under Minimum Samples. See the Filter Low Counts section below for more information."/>
                            <conditional name="samples">
                                <param name="count_select" type="select" label="Filter on Total Count or per Sample Count values?">
                                    <option value="total">
                                        Total
                                    </option>
                                    <option value="sample">
                                        Sample
                                    </option>
                                </param>
                                <when value="total"/>
                                <when value="sample">
                                    <param name="cntSampleReq" type="integer" value="0" min="0" label="Minimum Samples" help="Filter out all genes that do not meet the Minimum Count in at least this many samples. See the Filter Low Counts section below for more information."/>
                                </when>
                            </conditional>
                        </when>
                    </conditional>
                </when>
                <when value="no"/>
            </conditional>
        </section>
        <section name="out" expanded="false" title="Output Options">
            <param name="plots" type="select" display="checkboxes" multiple="True" optional="True" label="Additional Plots" help="Select additional plots to output in the report">
                <option value="i" selected="True">
                    Glimma Interactive Plots
                </option>
                <option value="d">
                    Density Plots (if filtering)
                </option>
                <option value="c">
                    CpmsVsCounts Plots (if filtering on cpms)
                </option>
                <option value="b">
                    Box Plots (if normalising)
                </option>
                <option value="x">
                    MDS Extra (Dims 2vs3 and 3vs4)
                </option>
                <option value="m">
                    MD Plots for individual samples
                </option>
                <option value="h">
                    Heatmaps (top DE genes)
                </option>
                <option value="s">
                    Stripcharts (top DE genes)
                </option>
            </param>
            <param name="filtCounts" type="boolean" truevalue="1" falsevalue="0" checked="false" label="Output Filtered Counts Table?" help="Output a file containing the raw filtered counts if Filter Low Counts is selected. Default: No">
            </param>
            <param name="normCounts" type="boolean" truevalue="1" falsevalue="0" checked="false" label="Output Normalised Counts Table?" help="Output a file containing the normalised counts, these are in log2 counts per million (logCPM). Default: No">
            </param>
            <param name="libinfo" type="boolean" truevalue="1" falsevalue="0" checked="false" label="Output Library information file?" help="Output a tabular file showing the library sizes, normalisation factors and effective library sizes for the samples. Default: No">
            </param>
            <param name="rscript" type="boolean" truevalue="True" falsevalue="False" checked="False" label="Output Rscript?" help="If this option is set to Yes, the Rscript used will be provided as a text file in the output. Default: No"/>
            <param name="rdaOption" type="boolean" truevalue="1" falsevalue="0" checked="false" label="Output RData file?" help="Output all the data used by R to construct the plots and tables, can be loaded into R. A link to the RData file will be provided in the HTML report. Default: No">
            </param>
        </section>
        <section name="adv" expanded="false" title="Advanced Options">
            <param name="lfc" type="float" value="0" min="0" label="Minimum Log2 Fold Change" help="Genes above this threshold and below the p-value threshold are considered significant and highlighted in the MD plot. Default: 0."/>
            <param name="pVal" type="float" value="0.05" min="0" max="1" label="P-Value Adjusted Threshold" help="Genes below this threshold are considered significant and highlighted in the MD plot. If either BH(1995) or BY(2001) are selected then this value is a false-discovery-rate control. If Holm(1979) is selected then this is an adjusted p-value for family-wise error rate. Default: 0.05."/>
            <param name="pAdjust" type="select" label="P-Value Adjustment Method" help="Default: BH">
                <option value="BH" selected="true">
                    Benjamini and Hochberg (1995)
                </option>
                <option value="BY">
                    Benjamini and Yekutieli (2001)
                </option>
                <option value="holm">
                    Holm (1979)
                </option>
                <option value="none">
                    None
                </option>
            </param>
            <param name="treat" type="boolean" truevalue="1" falsevalue="0" checked="False" label="Test significance relative to a fold-change threshold (TREAT)" help="If you want to apply a cut-off on a fold change the TREAT function can be used, see Help section below. Default: No"/>
            <param name="topgenes" type="integer" value="10" min="0" max="100" label="Number of genes to highlight in Volcano plot, Heatmap and Stripcharts" help="The top DE genes will be highlighted in the Volcano plot for each contrast and can be output in heatmap and stripchart PDFs (max 100). Default: 10."/>
            <param name="normalisationOption" type="select" label="Normalisation Method" help="Default: TMM">
                <option value="TMM" selected="true">
                    TMM
                </option>
                <option value="RLE">
                    RLE
                </option>
                <option value="upperquartile">
                    Upperquartile
                </option>
                <option value="none">
                    None (Don't normalise)
                </option>
            </param>
            <param name="robOption" type="boolean" truevalue="1" falsevalue="0" checked="true" label="Use Robust Settings?" help="Using robust settings is usually recommended to protect against outlier genes. Default: Yes"/>
        </section>
    </inputs>
    <outputs>
        <data name="outReport" format="html" label="${tool.name} on ${on_string}: Report"/>
        <collection name="outTables" type="list" label="${tool.name} on ${on_string}: DE tables">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.tsv$" format="tabular" directory="output_dir" visible="false"/>
        </collection>
        <data name="outFilt" format="tabular" from_work_dir="output_dir/*_filtcounts" label="${tool.name} on ${on_string}: Filtered counts">
            <filter>
                out['filtCounts']
            </filter>
        </data>
        <data name="outNorm" format="tabular" from_work_dir="output_dir/*_normcounts" label="${tool.name} on ${on_string}: Normalised counts">
            <filter>
                out['normCounts']
            </filter>
        </data>
        <data name="rscript" format="txt" label="${tool.name} on ${on_string}: Rscript">
            <filter>
                out['rscript']
            </filter>
        </data>
        <data name="libinfo" format="tabular" from_work_dir="libsizeinfo" label="${tool.name} on ${on_string}: Library information">
            <filter>
                out['libinfo']
            </filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="format" value="matrix"/>
            <param name="counts" value="matrix.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <repeat name="rep_contrast">
                <param name="contrast" value="WT-Mut"/>
            </repeat>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <output_collection name="outTables" count="2">
                <element name="limma-voom_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.4573"/>
                    </assert_contents>
                </element>
                <element name="limma-voom_WT-Mut" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*-0.4573"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="outReport">
                <assert_contents>
                    <has_text text="Limma Analysis Output"/>
                    <has_text text="Glimma Interactive Results"/>
                    <not_has_text text="RData"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="format" value="matrix"/>
            <param name="annoOpt" value="yes"/>
            <param name="geneanno" value="anno.txt"/>
            <param name="counts" value="matrix.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <output_collection name="outTables" count="1">
                <element name="limma-voom_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="EntrezID.*Symbol.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*Abca4.*0.4573"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <test expect_num_outputs="3">
            <param name="format" value="matrix"/>
            <param name="rscript" value="True"/>
            <param name="rdaOption" value="true"/>
            <param name="counts" value="matrix.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <output name="outReport">
                <assert_contents>
                    <has_text text="RData"/>
                </assert_contents>
            </output>
            <output name="rscript">
                <assert_contents>
                    <has_text_matching expression="Task run time"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="format" value="matrix"/>
            <param name="counts" value="matrix.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <repeat name="rep_factor">
                <param name="factorName" value="Batch"/>
                <param name="groupNames" value="b1,b2,b3,b1,b2,b3"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <output_collection name="outTables" count="1">
                <element name="limma-voom_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.4590"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <test expect_num_outputs="2">
            <param name="format" value="matrix"/>
            <param name="ffile" value="yes"/>
            <param name="finfo" value="factorinfo.txt"/>
            <param name="counts" value="matrix.txt"/>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <output_collection name="outTables" count="1">
                <element name="limma-voom_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.4590"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <test expect_num_outputs="4">
            <param name="format" value="matrix"/>
            <param name="filtCounts" value="true"/>
            <param name="normCounts" value="true"/>
            <param name="counts" value="matrix.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <param name="filt_select" value="yes"/>
            <param name="format_select" value="counts"/>
            <param name="cntReq" value="10"/>
            <param name="count_select" value="sample"/>
            <param name="cntSampleReq" value="3"/>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <output_collection name="outTables" count="1">
                <element name="limma-voom_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.45.*15.52.*4.94.*7.74.*0.0001.*5.27"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="outNorm" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="GeneID.*Mut1.*Mut2.*Mut3.*WT1.*WT2.*WT3"/>
                    <has_text_matching expression="11304.*15.7.*15.8.*15.6.*15.3.*15.2.*15.2"/>
                </assert_contents>
            </output>
            <output name="outFilt" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="GeneID.*Mut1.*Mut2.*Mut3.*WT1.*WT2.*WT3"/>
                    <has_text_matching expression="11304.*361.*397.*346.*356.*312.*337"/>
                    <not_has_text text="11302"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="format" value="files"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <repeat name="rep_group">
                    <param name="groupName" value="WT"/>
                    <param name="countsFile" value="WT1.counts,WT2.counts,WT3.counts"/>
                </repeat>
                <repeat name="rep_group">
                    <param name="groupName" value="Mut"/>
                    <param name="countsFile" value="Mut1.counts,Mut2.counts,Mut3.counts"/>
                </repeat>
            </repeat>
            <repeat name="rep_factor">
                <param name="factorName" value="Batch"/>
                <repeat name="rep_group">
                    <param name="groupName" value="b1"/>
                    <param name="countsFile" value="WT1.counts,Mut1.counts"/>
                </repeat>
                <repeat name="rep_group">
                    <param name="groupName" value="b2"/>
                    <param name="countsFile" value="WT2.counts,Mut2.counts"/>
                </repeat>
                <repeat name="rep_group">
                    <param name="groupName" value="b3"/>
                    <param name="countsFile" value="WT3.counts,Mut3.counts"/>
                </repeat>
            </repeat>
            <param name="annoOpt" value="yes"/>
            <param name="geneanno" value="anno.txt"/>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <repeat name="rep_contrast">
                <param name="contrast" value="WT-Mut"/>
            </repeat>
            <param name="topgenes" value="6"/>
            <param name="normCounts" value="true"/>
            <output_collection name="outTables" count="2">
                <element name="limma-voom_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*Abca4.*0.4590"/>
                    </assert_contents>
                </element>
                <element name="limma-voom_WT-Mut" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="EntrezID.*Symbol.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*Abca4.*-0.4590"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="outNorm" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="EntrezID.*Symbol.*Mut1.*Mut2.*Mut3.*WT1.*WT2.*WT3"/>
                    <has_text_matching expression="11304.*Abca4.*15.7545"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="format" value="matrix"/>
            <param name="counts" value="matrix.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <param name="de_select" value="trend"/>
            <output name="outReport">
                <assert_contents>
                    <has_text text="The limma-trend method was used"/>
                </assert_contents>
            </output>
            <output_collection name="outTables" count="1">
                <element name="limma-trend_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.4540"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <test expect_num_outputs="2">
            <param name="format" value="matrix"/>
            <param name="counts" value="matrix.txt"/>
            <param name="annoOpt" value="yes"/>
            <param name="geneanno" value="anno.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="Mut-WT"/>
            </repeat>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <param name="de_select" value="trend"/>
            <output name="outReport">
                <assert_contents>
                    <has_text text="The limma-trend method was used"/>
                </assert_contents>
            </output>
            <output_collection name="outTables" count="1">
                <element name="limma-trend_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="EntrezID.*Symbol.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.4540"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <test expect_num_outputs="3">
            <param name="format" value="matrix"/>
            <param name="counts" value="matrix_num.txt"/>
            <param name="annoOpt" value="yes"/>
            <param name="geneanno" value="anno.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Group"/>
                <param name="groupNames" value="2,2,2,1,1,1"/>
            </repeat>
            <param name="cfile" value="no"/>
            <repeat name="rep_contrast">
                <param name="contrast" value="2-1"/>
            </repeat>
            <param name="filt_select" value="yes"/>
            <param name="format_select" value="counts"/>
            <param name="cntReq" value="10"/>
            <param name="count_select" value="sample"/>
            <param name="cntSampleReq" value="3"/>
            <param name="normalisationOption" value="TMM"/>
            <param name="normCounts" value="true"/>
            <param name="topgenes" value="6"/>
            <param name="de_select" value="voom"/>
            <output_collection name="outTables" count="1">
                <element name="limma-voom_X2-X1" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="EntrezID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.45.*15.52.*4.94.*7.74.*0.0001.*5.27"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="outNorm" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="EntrezID.*2-1.*2-2.*2-3.*1-1.*1-2.*1-3"/>
                    <has_text_matching expression="11304.*15.7.*15.8.*15.6.*15.3.*15.2.*15.2"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="format" value="matrix"/>
            <param name="counts" value="matrix.txt"/>
            <repeat name="rep_factor">
                <param name="factorName" value="Genotype"/>
                <param name="groupNames" value="Mut,Mut,Mut,WT,WT,WT"/>
            </repeat>
            <param name="cfile" value="yes"/>
            <param name="cinfo" value="contrasts.txt" ftype="tabular"/>
            <param name="normalisationOption" value="TMM"/>
            <param name="topgenes" value="6"/>
            <output_collection name="outTables" count="3">
                <element name="limma-voom_Mut-WT" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.4573"/>
                    </assert_contents>
                </element>
                <element name="limma-voom_WT-Mut" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*-0.4573"/>
                    </assert_contents>
                </element>
                <element name="limma-voom_Mut-WT-WT-Mut" ftype="tabular">
                    <assert_contents>
                        <has_text_matching expression="GeneID.*logFC.*AveExpr.*t.*P.Value.*adj.P.Val.*B"/>
                        <has_text_matching expression="11304.*0.9146"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <citations>
        <citation type="doi">
            10.1186/gb-2014-15-2-r29
        </citation>
        <citation type="doi">
            10.1093/nar/gkv412
        </citation>
    </citations>
</tool>